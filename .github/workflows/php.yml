name: PHP Composer

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test

                - name: Azure SQL Deploy
  uses: Azure/sql-action@v2.2.1
  with:
    # The connection string, including authentication information, for the Azure SQL Server database.
    connection-string: 
    # Path to the file used for this action. Supported file types are .sql, .dacpac, or .sqlproj.
    path: 
    # If not using a .sql file, the sqlpackage action to execute.
    action: # optional
    # In case of .dacpac or .sqlproj file types, additional sqlpackage arguments that will be applied. In case of .sql file type, additional go-sqlcmd argument that will be applied.
    arguments: # optional
    # In case of a .sqlproj file, additional arguments that will be applied to dotnet build when building the database project.
    build-arguments: # optional
          
